---
- name: Stop Compute VMs if they exist
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    #api_token_id: "{{ proxmox_secrets.api_token_id }}"
    #api_token_secret: "{{ proxmox_secrets.api_token_secret }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    name: "{{ item.name }}"
    node: "{{ proxmox.node }}"
    vmid: "{{ item.id }}"
    state: stopped
    timeout: 150
  when: fullWipe | bool
  register: compute_stop_result
  failed_when:
    - compute_stop_result is failed
    - "'does not exist' not in (compute_stop_result.msg | default(''))"
  with_items:
   - "{{ nodeNetworkInfo.computes }}"

- name: Destroy Compute VMs if they exist
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    #api_token_id: "{{ proxmox_secrets.api_token_id }}"
    #api_token_secret: "{{ proxmox_secrets.api_token_secret }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    name: "{{ item.name }}"
    node: "{{ proxmox.node }}"
    vmid: "{{ item.id }}"
    state: absent
  when: fullWipe | bool
  register: compute_destroy_result
  failed_when:
    - compute_destroy_result is failed
    - "'does not exist' not in (compute_destroy_result.msg | default(''))"
  with_items:
   - "{{ nodeNetworkInfo.computes }}"

# Create Compute VMs
- name: Create Compute VMs
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    #api_token_id: "{{ proxmox_secrets.api_token_id }}"
    #api_token_secret: "{{ proxmox_secrets.api_token_secret }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    name: "{{ item.name }}.{{ openshift.cluster.name }}"
    node: "{{ proxmox.node }}"
    vmid: "{{ vmTemplate.id }}"
    newid: "{{ item.id }}"
    clone: "{{ vmTemplate.name }}"
    # Cannot do link clones with scsi0
    # full: no
    net:
      net0: 'virtio={{ item.MAC }},bridge={{ vmNet.ifName }}'
    agent: yes
    serial:
      serial0: socket
    state: present
    args: "-fw_cfg name=opt/com.coreos/config,file={{ files.proxmoxDir }}/ignitions/{{ openshift.cluster.name }}/worker.ign"
    timeout: 300
  register: compute_vms_info
  with_items:
   - "{{ nodeNetworkInfo.computes }}"

- name: Update Compute VM hardware configuration
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    vmid: "{{ item.id }}"
    node: "{{ proxmox.node }}"
    cores: "{{ computeSizing.cores }}"
    memory: "{{ computeSizing.mem }}"
    update: yes
  with_items:
    - "{{ nodeNetworkInfo.computes }}"

- name: Create NIC net0 targeting the vm by id
  community.proxmox.proxmox_nic:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    #api_token_id: "{{ proxmox_secrets.api_token_id }}"
    #api_token_secret: "{{ proxmox_secrets.api_token_secret }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    vmid: "{{ item.id }}"
    interface: net0
    bridge: "{{ vmNet.ifName }}"
    mac: "{{ item.MAC }}"
  register: computes_nics_set
  with_items:
   - "{{ nodeNetworkInfo.computes }}"

# - name: View returned Control Plane VM creation info
#   debug:
#     var: compute_vms_info

- name: Resize compute nodes disks
  community.proxmox.proxmox_disk:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    vmid: "{{ item.id }}"
    disk: scsi0
    size: "{{ vm_disk_size }}"
    state: resized
  with_items:
    - "{{ nodeNetworkInfo.computes }}"

- name: Start Compute VMs after all configuration is complete
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox.api_host }}"
    api_user: "{{ proxmox.api_user }}"
    api_password: "{{ proxmox_secrets.api_password }}"
    vmid: "{{ item.id }}"
    node: "{{ proxmox.node }}"
    state: started
    timeout: 60
  with_items:
    - "{{ nodeNetworkInfo.computes }}"
  when: auto_start_vms | default(false) | bool
#---------------------------------------------------------------------
# HAProxy Configuration for OpenShift {{ openshift.cluster.name }}
# Generated by Ansible
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    
    # SSL/TLS settings
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# Common defaults
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# Stats page (optional but recommended)
#---------------------------------------------------------------------
listen stats
    bind *:9000
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:admin
    stats admin if TRUE

#---------------------------------------------------------------------
# Kubernetes API Server (Control Plane)
# Port 6443 - for oc/kubectl and OpenShift web console
#---------------------------------------------------------------------
frontend api-server
    bind *:6443
    mode tcp
    option tcplog
    default_backend api-server-backend

backend api-server-backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    
    # Bootstrap node (remove after bootstrap completion)
{% for node in nodeNetworkInfo.bootstrap %}
    server {{ node.name }} {{ node.IP }}:6443 check
{% endfor %}
    
    # Control plane nodes
{% for node in nodeNetworkInfo.controlplanes %}
    server {{ node.name }} {{ node.IP }}:6443 check
{% endfor %}

#---------------------------------------------------------------------
# Machine Config Server
# Port 22623 - for machine config and ignition updates
#---------------------------------------------------------------------
frontend machine-config-server
    bind *:22623
    mode tcp
    option tcplog
    default_backend machine-config-server-backend

backend machine-config-server-backend
    mode tcp
    balance roundrobin
    
    # Bootstrap node (remove after bootstrap completion)
{% for node in nodeNetworkInfo.bootstrap %}
    server {{ node.name }} {{ node.IP }}:22623 check
{% endfor %}
    
    # Control plane nodes
{% for node in nodeNetworkInfo.controlplanes %}
    server {{ node.name }} {{ node.IP }}:22623 check
{% endfor %}

#---------------------------------------------------------------------
# HTTP Ingress (Router)
# Port 80 - for HTTP applications
# Routes to worker nodes if available, otherwise to control plane (converged)
#---------------------------------------------------------------------
frontend http-ingress
    bind *:80
    mode tcp
    option tcplog
    default_backend http-ingress-backend

backend http-ingress-backend
    mode tcp
    balance roundrobin
    
{% if nodeNetworkInfo.computes | length > 0 %}
    # Worker nodes (dedicated workers cluster)
{% for node in nodeNetworkInfo.computes %}
    server {{ node.name }} {{ node.IP }}:80 check
{% endfor %}
{% else %}
    # Control plane nodes (converged cluster - no dedicated workers)
{% for node in nodeNetworkInfo.controlplanes %}
    server {{ node.name }} {{ node.IP }}:80 check
{% endfor %}
{% endif %}

#---------------------------------------------------------------------
# HTTPS Ingress (Router)
# Port 443 - for HTTPS applications and routes
# Routes to worker nodes if available, otherwise to control plane (converged)
#---------------------------------------------------------------------
frontend https-ingress
    bind *:443
    mode tcp
    option tcplog
    default_backend https-ingress-backend

backend https-ingress-backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    
{% if nodeNetworkInfo.computes | length > 0 %}
    # Worker nodes (dedicated workers cluster)
{% for node in nodeNetworkInfo.computes %}
    server {{ node.name }} {{ node.IP }}:443 check
{% endfor %}
{% else %}
    # Control plane nodes (converged cluster - no dedicated workers)
{% for node in nodeNetworkInfo.controlplanes %}
    server {{ node.name }} {{ node.IP }}:443 check
{% endfor %}
{% endif %}

